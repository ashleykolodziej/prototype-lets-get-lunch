<template>
<div class="page" data-name="friends">
  <div class="navbar">
    <div class="navbar-bg"></div>
    <div class="navbar-inner sliding">
      <div class="title-large"><div class="title-large-text">Friends</div></div>
      <div class="subnavbar">
      	<form data-search-container=".virtual-list" data-search-item="li" data-search-in=".item-title"
            class="searchbar searchbar-init">
            <div class="searchbar-inner">
              <div class="searchbar-input-wrap">
                <input type="search" placeholder="Search" />
                <i class="searchbar-icon"></i>
                <span class="input-clear-button"></span>
              </div>
              <span class="searchbar-disable-button if-not-aurora">Cancel</span>
            </div>
          </form>
      </div>
    </div>
  </div>
  <div class="searchbar-backdrop"></div>
  <div class="page-content">
		<div class="list simple-list searchbar-not-found">
        <ul>
          <li>Nothing found</li>
        </ul>
      </div>
      <div class="list virtual-list media-list searchbar-found friends-list inset"></div>
  </div>
</div>
</template>
<script>
export default (props, { $f7, $el, $theme, $on }) => {
	let items = [];

	fetch('https://randomuser.me/api/?results=10')
	  .then(response => response.json())
	  .then(data => {
	  		data.results.forEach(user => {
	  			//console.log(user);
	  			items.push({
		        title: `${user.name.first} ${user.name.last}`,
		        image: user.picture.large,
		        location: `${user.location.city}, ${user.location.state}`
		      });
	  		});
	  });

    $on('pageInit', () => {
      const virtualList = $f7.virtualList.create({
        // List Element
        el: $el.value.find('.virtual-list'),
        // Pass array with items
        items,
        // Custom search function for searchbar
        searchAll: function (query, items) {
          var found = [];
          for (var i = 0; i < items.length; i++) {
            if (items[i].title.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);
          }
          return found; //return array with mathced indexes
        },
        // List item render
        renderItem(item) {
          return `
          <li>
            <a href="#" class="item-link item-content">
            <div class="item-profile item-media"><img src="${item.image}"
                  width="50" /></div>
              <div class="item-inner">
                <div class="item-title-row">
                  <div class="item-title">${item.title}</div>
                </div>
                <div class="item-subtitle">${item.location}</div>
              </div>
            </a>
          </li>`;
        },
        // Item height
        height: $theme.ios ? 63 : ($theme.md ? 73 : 77),
      });
    });

    return $render;
  }
</script>
